{"version":3,"sources":["components/user-card/user-card.component.jsx","firebase/firebase.utils.js","redux/user/user.selectors.js","components/header/header.component.jsx","components/todo-form/todo-form.component.jsx","components/todo-item/todo-item.component.jsx","redux/todo/todo.selectors.js","components/todos-container/todos-container.component.jsx","pages/todo-page/todo-page.component.jsx","components/footer/footer.component.jsx","redux/user/user.types.js","redux/todo/todo.types.js","App.js","redux/user/user.actions.js","redux/todo/todo.actions.js","redux/user/user.reducer.js","redux/todo/todo.utils.js","redux/todo/todo.reducer.js","redux/root.reducer.js","redux/store.js","index.js"],"names":["UserCard","name","imageURL","otherProps","Pane","display","marginRight","marginLeft","alignItems","Avatar","src","size","Text","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionalData","a","userRef","firestore","doc","uid","get","exists","displayName","email","photoURL","createdAt","Date","set","console","error","message","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup","selectCurrentUser","createSelector","state","user","currentUser","connect","className","padding","borderRadius","background","flex","Heading","Button","onClick","signOut","appearance","paddingX","Icon","icon","color","TodoForm","text","disabled","handleChange","event","setState","target","value","handleSubmit","preventDefault","props","collection","id","todosRef","add","starred","completed","this","onSubmit","margin","height","width","TextInput","onChange","placeholder","required","React","Component","TodoItem","handleCompleted","todoId","update","handleStarred","handleDelete","delete","index","marginX","overflow","data-completed","selectTodos","todo","todos","flexDirection","length","map","key","justifyContent","Footer","UserActionTypes","SET_CURRENT_USER","TodoActionTypes","SET_ALL_TODOS","App","unsubscribeFromAuth","setCurrentUser","setAllTodos","onAuthStateChanged","onSnapshot","snapShot","data","path","dispatch","type","payload","INITIAL_STATE","userReducer","action","snapShotToArray","docs","sort","prev","next","INTIAL_STATE","todoReducer","rootReducer","combineReducers","middlewares","logger","createStore","applyMiddleware","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.5dcfcace.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nimport { Pane, Avatar, Text } from 'evergreen-ui'\r\n\r\nimport './user-card.styles.scss'\r\n\r\nconst UserCard = ({ name, imageURL, ...otherProps }) => (\r\n  <Pane\r\n    display=\"flex\"\r\n    marginRight={8}\r\n    marginLeft={8}\r\n    alignItems=\"center\"\r\n    {...otherProps}\r\n  >\r\n    <Avatar src={imageURL} name={name} size={32} marginRight={8} />\r\n    <Text size={500}>{name}</Text>\r\n  </Pane>\r\n)\r\n\r\nexport default UserCard\r\n","import firebase from 'firebase/app'\r\nimport 'firebase/auth'\r\nimport 'firebase/firestore'\r\n\r\nconst firebaseConfig = {\r\n  apiKey: 'AIzaSyCkjxIEEQshEbM3GNrG5LMH2dqtuEgFLsM',\r\n  authDomain: 'todo-react-app-1c2b9.firebaseapp.com',\r\n  databaseURL: 'https://todo-react-app-1c2b9.firebaseio.com',\r\n  projectId: 'todo-react-app-1c2b9',\r\n  storageBucket: 'todo-react-app-1c2b9.appspot.com',\r\n  messagingSenderId: '494569883453',\r\n  appId: '1:494569883453:web:0bd3c0a828e36e45296754',\r\n  measurementId: 'G-FXZW0XVN8D'\r\n}\r\n\r\nfirebase.initializeApp(firebaseConfig)\r\n\r\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\r\n  if (!userAuth) return\r\n\r\n  const userRef = firestore.doc(`/users/${userAuth.uid}`)\r\n  const snapShot = await userRef.get()\r\n\r\n  if (!snapShot.exists) {\r\n    const { displayName, email, photoURL } = userAuth\r\n    const createdAt = new Date()\r\n\r\n    try {\r\n      await userRef.set({\r\n        displayName,\r\n        email,\r\n        photoURL,\r\n        createdAt,\r\n        ...additionalData\r\n      })\r\n    } catch (error) {\r\n      console.error(`error creating user: ${error.message}`)\r\n    }\r\n  }\r\n\r\n  return userRef\r\n}\r\n\r\nexport const auth = firebase.auth()\r\nexport const firestore = firebase.firestore()\r\n\r\nconst provider = new firebase.auth.GoogleAuthProvider()\r\nprovider.setCustomParameters({\r\n  prompt: 'select_account'\r\n})\r\n\r\nexport const signInWithGoogle = () => auth.signInWithPopup(provider)\r\n\r\nexport default firebase\r\n","import { createSelector } from 'reselect'\r\n\r\nconst selectUser = state => state.user\r\n\r\nexport const selectCurrentUser = createSelector(\r\n  [selectUser],\r\n  user => user.currentUser\r\n)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport './header.styles.scss'\r\n\r\nimport { Pane, Button, Heading, Icon } from 'evergreen-ui'\r\n\r\nimport UserCard from '../user-card/user-card.component'\r\n\r\nimport { auth, signInWithGoogle } from '../../firebase/firebase.utils'\r\n\r\nimport { selectCurrentUser } from '../../redux/user/user.selectors'\r\n\r\nconst Header = ({ currentUser }) => {\r\n  return (\r\n    <div className=\"header-container\">\r\n      <Pane\r\n        className=\"header\"\r\n        display=\"flex\"\r\n        padding={16}\r\n        borderRadius={3}\r\n        background=\"tint2\"\r\n      >\r\n        <Pane flex={1} display=\"flex\" alignItems=\"center\">\r\n          <Heading size={600}>✏ Todo</Heading>\r\n        </Pane>\r\n        <Pane display=\"flex\">\r\n          {currentUser ? (\r\n            <Pane display=\"flex\">\r\n              <UserCard\r\n                name={currentUser.displayName}\r\n                imageURL={currentUser.photoURL}\r\n              />\r\n              <Button\r\n                onClick={() => auth.signOut()}\r\n                appearance=\"minimal\"\r\n                paddingX={8}\r\n              >\r\n                <Icon icon=\"log-out\" color=\"muted\" />\r\n              </Button>\r\n            </Pane>\r\n          ) : (\r\n            <Button onClick={signInWithGoogle} appearance=\"primary\">\r\n              <span>Sign In</span>\r\n              <Icon icon=\"log-in\" marginLeft={10} />\r\n            </Button>\r\n          )}\r\n        </Pane>\r\n      </Pane>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  currentUser: selectCurrentUser(state)\r\n})\r\n\r\nexport default connect(mapStateToProps)(Header)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport './todo-form.styles.scss'\r\n\r\nimport { Pane, Button, Text, TextInput } from 'evergreen-ui'\r\n\r\nimport { selectCurrentUser } from '../../redux/user/user.selectors'\r\n\r\nimport { firestore } from '../../firebase/firebase.utils'\r\n\r\nclass TodoForm extends React.Component {\r\n  state = {\r\n    text: '',\r\n    createdAt: null,\r\n    disabled: false\r\n  }\r\n\r\n  handleChange = event => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    })\r\n  }\r\n\r\n  handleSubmit = async event => {\r\n    event.preventDefault()\r\n\r\n    this.setState({\r\n      disabled: true\r\n    })\r\n\r\n    const { currentUser } = this.props\r\n\r\n    try {\r\n      const todosRef = await firestore.collection(\r\n        `/users/${currentUser.id}/todos`\r\n      )\r\n\r\n      await todosRef.add({\r\n        text: this.state.text,\r\n        createdAt: new Date(),\r\n        starred: false,\r\n        completed: false\r\n      })\r\n    } catch (error) {\r\n      console.error(`couldn't save todo ${error.message}`)\r\n    }\r\n\r\n    this.setState({\r\n      text: '',\r\n      disabled: false\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { currentUser } = this.props\r\n\r\n    return (\r\n      <form className=\"todo-form\" onSubmit={this.handleSubmit}>\r\n        <Pane\r\n          display=\"flex\"\r\n          margin={20}\r\n          borderRadius={3}\r\n          alignItems=\"center\"\r\n          className=\"todo-item\"\r\n          height={50}\r\n        >\r\n          <Pane\r\n            flex={1}\r\n            alignItems=\"center\"\r\n            display=\"flex\"\r\n            width={20}\r\n            height=\"100%\"\r\n          >\r\n            <TextInput\r\n              className=\"text-input\"\r\n              name=\"text\"\r\n              onChange={this.handleChange}\r\n              placeholder=\"Enter a new task\"\r\n              width=\"100%\"\r\n              size={500}\r\n              height=\"100%\"\r\n              paddingX={12}\r\n              required\r\n              value={this.state.text}\r\n              disabled={!currentUser || this.state.disabled}\r\n            />\r\n          </Pane>\r\n          <Pane height=\"100%\">\r\n            <Button\r\n              className=\"add-button\"\r\n              appearance=\"minimal\"\r\n              height=\"100%\"\r\n              paddingX={20}\r\n              disabled={!currentUser || this.state.disabled}\r\n            >\r\n              <Text size={400}>Add</Text>\r\n            </Button>\r\n          </Pane>\r\n        </Pane>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  currentUser: selectCurrentUser(state)\r\n})\r\n\r\nexport default connect(mapStateToProps)(TodoForm)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport './todo-item.styles.scss'\r\n\r\nimport { Pane, Button, Text, Icon } from 'evergreen-ui'\r\n\r\nimport { selectCurrentUser } from '../../redux/user/user.selectors'\r\n\r\nimport { firestore } from '../../firebase/firebase.utils'\r\n\r\nclass TodoItem extends React.Component {\r\n  state = {\r\n    starred: false,\r\n    completed: false\r\n  }\r\n\r\n  handleCompleted = async todoId => {\r\n    const { currentUser } = this.props\r\n\r\n    try {\r\n      const completed = !this.state.completed\r\n      await firestore.doc(`/users/${currentUser.id}/todos/${todoId}`).update({\r\n        completed\r\n      })\r\n\r\n      this.setState({\r\n        completed\r\n      })\r\n    } catch (error) {\r\n      console.error(`failed to set todo as completed: ${error.message}`)\r\n    }\r\n  }\r\n\r\n  handleStarred = async todoId => {\r\n    const { currentUser } = this.props\r\n\r\n    try {\r\n      const starred = !this.state.starred\r\n      await firestore.doc(`/users/${currentUser.id}/todos/${todoId}`).update({\r\n        starred\r\n      })\r\n\r\n      this.setState({\r\n        starred\r\n      })\r\n    } catch (error) {\r\n      console.error(`failed to set todo as starred: ${error.message}`)\r\n    }\r\n  }\r\n\r\n  handleDelete = async todoId => {\r\n    const { currentUser } = this.props\r\n\r\n    try {\r\n      await firestore.doc(`/users/${currentUser.id}/todos/${todoId}`).delete()\r\n    } catch (error) {\r\n      console.error(`failed to delete todo: ${error.message}`)\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { completed, starred } = this.props\r\n\r\n    this.setState({\r\n      completed,\r\n      starred\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { todoId, index, text, starred, completed } = this.props\r\n\r\n    return (\r\n      <Pane\r\n        display=\"flex\"\r\n        padding={6}\r\n        borderRadius={3}\r\n        alignItems=\"center\"\r\n        className=\"todo-item\"\r\n      >\r\n        <Pane\r\n          flex={1}\r\n          alignItems=\"center\"\r\n          display=\"flex\"\r\n          width={20}\r\n          marginRight={6}\r\n        >\r\n          <Text size={500} marginX={4}>\r\n            {`${index}.`}\r\n          </Text>\r\n          <Text\r\n            size={500}\r\n            marginX={4}\r\n            overflow=\"hidden\"\r\n            className={`todo-text ${completed ? 'strike-text' : ''}`}\r\n            onClick={() => this.handleCompleted(todoId)}\r\n            data-completed={completed}\r\n          >\r\n            {text}\r\n          </Text>\r\n        </Pane>\r\n        <Pane>\r\n          <Button\r\n            appearance=\"minimal\"\r\n            marginRight={4}\r\n            onClick={() => this.handleStarred(todoId)}\r\n          >\r\n            <Icon icon=\"star\" color={`${starred ? '#F7D154' : 'muted'}`} />\r\n          </Button>\r\n          <Button\r\n            appearance=\"minimal\"\r\n            onClick={() => this.handleDelete(todoId)}\r\n          >\r\n            <Icon icon=\"cross\" color=\"danger\" />\r\n          </Button>\r\n        </Pane>\r\n      </Pane>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  currentUser: selectCurrentUser(state)\r\n})\r\n\r\nexport default connect(mapStateToProps)(TodoItem)\r\n","import { createSelector } from 'reselect'\r\n\r\nconst selectTodo = state => state.todo\r\n\r\nexport const selectTodos = createSelector([selectTodo], todo => todo.todos)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport './todos-container.styles.scss'\r\n\r\nimport { Pane, Heading } from 'evergreen-ui'\r\n\r\nimport TodoItem from '../todo-item/todo-item.component'\r\n\r\nimport { selectTodos } from '../../redux/todo/todo.selectors'\r\n\r\nconst TodosContainer = ({ todos }) => (\r\n  <Pane\r\n    display=\"flex\"\r\n    flexDirection=\"column\"\r\n    borderRadius={3}\r\n    background=\"tint2\"\r\n    margin={20}\r\n    className=\"todo-container\"\r\n  >\r\n    {todos.length ? (\r\n      todos.map(({ id, text, starred, completed, ...otherProps }, index) => (\r\n        <TodoItem\r\n          key={id}\r\n          todoId={id}\r\n          text={text}\r\n          index={index + 1}\r\n          starred={starred}\r\n          completed={completed}\r\n          {...otherProps}\r\n        />\r\n      ))\r\n    ) : (\r\n      <Pane\r\n        display=\"flex\"\r\n        padding={16}\r\n        borderRadius={3}\r\n        alignItems=\"center\"\r\n        justifyContent=\"center\"\r\n      >\r\n        <Heading color=\"#7B8B9A\">Empty :(</Heading>\r\n      </Pane>\r\n    )}\r\n  </Pane>\r\n)\r\n\r\nconst mapStateToProps = state => ({\r\n  todos: selectTodos(state)\r\n})\r\n\r\nexport default connect(mapStateToProps)(TodosContainer)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport './todo-page.styles.scss'\r\n\r\nimport TodoForm from '../../components/todo-form/todo-form.component'\r\nimport TodosContainer from '../../components/todos-container/todos-container.component'\r\n\r\nimport { Pane, Heading } from 'evergreen-ui'\r\n\r\nimport { selectCurrentUser } from '../../redux/user/user.selectors'\r\n\r\nconst TodoPage = ({ currentUser }) => {\r\n  return (\r\n    <div className=\"todo-page\">\r\n      {currentUser ? null : (\r\n        <Pane\r\n          display=\"flex\"\r\n          padding={16}\r\n          borderRadius={3}\r\n          background=\"tint2\"\r\n          margin={20}\r\n          alignItems=\"center\"\r\n        >\r\n          <Heading color=\"#7B8B9A\">Sign in and start adding tasks ^_^</Heading>\r\n        </Pane>\r\n      )}\r\n      {currentUser ? <TodoForm /> : null}\r\n      {currentUser ? <TodosContainer /> : null}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  currentUser: selectCurrentUser(state)\r\n})\r\n\r\nexport default connect(mapStateToProps)(TodoPage)\r\n","import React from 'react'\r\nimport './footer.styles.scss'\r\n\r\nimport { Pane, Text, Icon } from 'evergreen-ui'\r\n\r\nconst Footer = () => (\r\n  <div className=\"footer-container\">\r\n    <Pane\r\n      className=\"footer\"\r\n      display=\"flex\"\r\n      padding={16}\r\n      borderRadius={3}\r\n      background=\"tint2\"\r\n      justifyContent=\"center\"\r\n    >\r\n      <Text display=\"flex\" alignItems=\"center\">\r\n        made with <Icon marginX={4} size={14} icon=\"heart\" color=\"#EC4C47\" /> by\r\n        tru ^_^\r\n      </Text>\r\n    </Pane>\r\n  </div>\r\n)\r\n\r\nexport default Footer\r\n","const UserActionTypes = {\r\n  SET_CURRENT_USER: 'SET_CURRENT_USER'\r\n}\r\n\r\nexport default UserActionTypes\r\n","const TodoActionTypes = {\r\n  SET_ALL_TODOS: 'SET_ALL_TODOS'\r\n}\r\n\r\nexport default TodoActionTypes\r\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport './App.scss'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\n\nimport Header from './components/header/header.component'\nimport TodoPage from './pages/todo-page/todo-page.component'\nimport Footer from './components/footer/footer.component'\n\nimport {\n  auth,\n  createUserProfileDocument,\n  firestore\n} from './firebase/firebase.utils'\n\nimport { setCurrentUser } from './redux/user/user.actions'\nimport { setAllTodos } from './redux/todo/todo.actions'\n\nclass App extends React.Component {\n  unsubscribeFromAuth = null\n\n  componentDidMount() {\n    const { setCurrentUser, setAllTodos } = this.props\n\n    this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n      if (userAuth) {\n        const todosRef = await firestore.collection(\n          `/users/${userAuth.uid}/todos/`\n        )\n        todosRef.onSnapshot(snapShot => setAllTodos(snapShot))\n\n        const userRef = await createUserProfileDocument(userAuth)\n\n        userRef.onSnapshot(snapShot => {\n          setCurrentUser({\n            id: snapShot.id,\n            ...snapShot.data()\n          })\n        })\n      } else {\n        setCurrentUser(userAuth)\n        // set todos to be empty\n        setAllTodos(null)\n      }\n    })\n  }\n\n  componentWillUnmount() {\n    this.unsubscribeFromAuth()\n  }\n\n  render() {\n    return (\n      <Router>\n        <div className=\"app\">\n          <Header className=\"header\" />\n          <div className=\"content\">\n            <Switch>\n              <Route path=\".\">\n                <TodoPage />\n              </Route>\n            </Switch>\n          </div>\n          <Footer className=\"footer\" />\n        </div>\n      </Router>\n    )\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  setCurrentUser: user => dispatch(setCurrentUser(user)),\n  setAllTodos: todos => dispatch(setAllTodos(todos))\n})\n\nexport default connect(null, mapDispatchToProps)(App)\n","import UserActionTypes from './user.types'\r\n\r\nexport const setCurrentUser = user => ({\r\n  type: UserActionTypes.SET_CURRENT_USER,\r\n  payload: user\r\n})\r\n","import TodoActionTypes from './todo.types'\r\n\r\nexport const setAllTodos = todos => ({\r\n  type: TodoActionTypes.SET_ALL_TODOS,\r\n  payload: todos\r\n})\r\n","import UserActionTypes from './user.types'\r\n\r\nconst INITIAL_STATE = {\r\n  currentUser: null\r\n}\r\n\r\nconst userReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case UserActionTypes.SET_CURRENT_USER:\r\n      return {\r\n        ...state,\r\n        currentUser: action.payload\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default userReducer\r\n","export const snapShotToArray = (snapShot = null) => {\r\n  if (!snapShot) return []\r\n\r\n  return snapShot.docs\r\n    .map(snapShot => ({\r\n      id: snapShot.id,\r\n      ...snapShot.data()\r\n    }))\r\n    .sort((prev, next) => prev.createdAt - next.createdAt)\r\n}\r\n","import TodoActionTypes from './todo.types'\r\n\r\nimport { snapShotToArray } from './todo.utils'\r\n\r\nconst INTIAL_STATE = {\r\n  todos: []\r\n}\r\n\r\nconst todoReducer = (state = INTIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case TodoActionTypes.SET_ALL_TODOS:\r\n      return {\r\n        ...state,\r\n        todos: snapShotToArray(action.payload)\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default todoReducer\r\n","import { combineReducers } from 'redux'\r\n\r\nimport userReducer from './user/user.reducer'\r\nimport todoReducer from './todo/todo.reducer'\r\n\r\nconst rootReducer = combineReducers({\r\n  user: userReducer,\r\n  todo: todoReducer\r\n})\r\n\r\nexport default rootReducer\r\n","import { createStore, applyMiddleware } from 'redux'\r\nimport logger from 'redux-logger'\r\n\r\nimport rootReducer from './root.reducer'\r\n\r\nconst middlewares = [logger]\r\n\r\nexport default createStore(rootReducer, applyMiddleware(...middlewares))\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\n\nimport './index.scss'\nimport App from './App'\n\nimport store from './redux/store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}